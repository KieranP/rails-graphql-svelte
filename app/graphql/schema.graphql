schema {
  query: Queries
  mutation: Mutations
  subscription: Subscriptions
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Mutations {
  createPost(
    """
    Parameters for PostCreate
    """
    input: PostCreateInput!
  ): PostCreatePayload
  createUser(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserCreatePayload
  destroyPost(
    """
    Parameters for PostDestroy
    """
    input: PostDestroyInput!
  ): PostDestroyPayload
  forgotPassword(
    """
    Parameters for UserForgotPassword
    """
    input: UserForgotPasswordInput!
  ): UserForgotPasswordPayload
  loginUser(
    """
    Parameters for UserLogin
    """
    input: UserLoginInput!
  ): UserLoginPayload
  logoutUser(
    """
    Parameters for UserLogout
    """
    input: UserLogoutInput!
  ): UserLogoutPayload
  resetPassword(
    """
    Parameters for UserResetPassword
    """
    input: UserResetPasswordInput!
  ): UserResetPasswordPayload
  updatePost(
    """
    Parameters for PostUpdate
    """
    input: PostUpdateInput!
  ): PostUpdatePayload
  updateUser(
    """
    Parameters for UserUpdate
    """
    input: UserUpdateInput!
  ): UserUpdatePayload
}

input OtpAction {
  code: String
  enable: Boolean
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Post {
  body: String!
  createdAt: ISO8601DateTime!
  title: String!
  user: User!
  uuid: ID!
}

"""
The connection type for Post.
"""
type PostConnection {
  """
  A list of edges.
  """
  edges: [PostEdge]

  """
  A list of nodes.
  """
  nodes: [Post]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
Autogenerated input type of PostCreate
"""
input PostCreateInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
}

"""
Autogenerated return type of PostCreate.
"""
type PostCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post
}

"""
Autogenerated input type of PostDestroy
"""
input PostDestroyInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  uuid: ID!
}

"""
Autogenerated return type of PostDestroy.
"""
type PostDestroyPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Post
}

"""
Autogenerated input type of PostUpdate
"""
input PostUpdateInput {
  body: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
  uuid: ID!
}

"""
Autogenerated return type of PostUpdate.
"""
type PostUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post
}

type Queries {
  allPosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PostConnection!
  findPost(uuid: ID!): Post!
  findUser(uuid: ID!): User!
}

type Subscriptions {
  postUpdated(uuid: ID!): Post!
  userUpdated(uuid: ID!): User!
}

type User {
  createdAt: ISO8601DateTime!
  email: String
  locale: String!
  name: String!
  otpEnabled: Boolean
  otpProvisioningUrl: String
  posts: [Post!]!
  uuid: ID!
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  locale: String!
  name: String!
  password: String!
  passwordConfirmation: String!
}

"""
Autogenerated return type of UserCreate.
"""
type UserCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

"""
Autogenerated input type of UserForgotPassword
"""
input UserForgotPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
}

"""
Autogenerated return type of UserForgotPassword.
"""
type UserForgotPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  success: Boolean!
}

"""
Autogenerated input type of UserLogin
"""
input UserLoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  otpCode: String
  password: String!
}

"""
Autogenerated return type of UserLogin.
"""
type UserLoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}

"""
Autogenerated input type of UserLogout
"""
input UserLogoutInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UserLogout.
"""
type UserLogoutPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User
}

"""
Autogenerated input type of UserResetPassword
"""
input UserResetPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  passwordConfirmation: String!
  token: String!
}

"""
Autogenerated return type of UserResetPassword.
"""
type UserResetPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  success: Boolean!
}

"""
Autogenerated input type of UserUpdate
"""
input UserUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
  locale: String
  name: String
  otpAction: OtpAction
  uuid: ID!
}

"""
Autogenerated return type of UserUpdate.
"""
type UserUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String
  user: User
}
