name: CI

on: [push, pull_request]

jobs:
  rubocop:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_DB: fullapp-test
          POSTGRES_USER: fullapp
          POSTGRES_PASSWORD: fullapp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Cache Rubygems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install Rubygems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Cache Node Packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-
      - name: Install Node Packages
        run: yarn install --frozen-lockfile

      - name: Run Rubocop
        run: bundle exec rubocop

  # brakeman:
  #   runs-on: ubuntu-latest

  #   services:
  #     postgres:
  #       image: postgres
  #       ports: ['5432:5432']
  #       env:
  #         POSTGRES_DB: fullapp-test
  #         POSTGRES_USER: fullapp
  #         POSTGRES_PASSWORD: fullapp
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #     redis:
  #       image: redis
  #       ports: ['6379:6379']
  #       options: >-
  #         --health-cmd "redis-cli ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2

  #     - name: Setup Ruby
  #       uses: ruby/setup-ruby@v1
  #     - name: Cache Rubygems
  #       uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gems-
  #     - name: Install Rubygems
  #       run: |
  #         bundle config path vendor/bundle
  #         bundle install --jobs 4 --retry 3

  #     - name: Setup Node
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '16.x'
  #     - name: Cache Node Packages
  #       uses: actions/cache@v2
  #       with:
  #         path: node_modules
  #         key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.OS }}-yarn-
  #     - name: Install Node Packages
  #       run: yarn install --frozen-lockfile

  #     - name: Run Brakeman
  #       run: bundle exec brakeman

  specs:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_DB: fullapp-test
          POSTGRES_USER: fullapp
          POSTGRES_PASSWORD: fullapp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
      - name: Cache Rubygems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install Rubygems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Cache Node Packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-
      - name: Install Node Packages
        run: yarn install --frozen-lockfile

      - name: Run Specs
        run: bundle exec rspec
