class Session < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Session, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def user_id: () -> Integer

    def user_id=: (Integer) -> Integer

    def user_id?: () -> bool

    def user_id_changed?: () -> bool

    def user_id_change: () -> [ Integer?, Integer? ]

    def user_id_will_change!: () -> void

    def user_id_was: () -> Integer?

    def user_id_previously_changed?: () -> bool

    def user_id_previous_change: () -> Array[Integer?]?

    def user_id_previously_was: () -> Integer?

    def user_id_before_last_save: () -> Integer?

    def user_id_change_to_be_saved: () -> Array[Integer?]?

    def user_id_in_database: () -> Integer?

    def saved_change_to_user_id: () -> Array[Integer?]?

    def saved_change_to_user_id?: () -> bool

    def will_save_change_to_user_id?: () -> bool

    def restore_user_id!: () -> void

    def clear_user_id_change: () -> void

    def jwt_id: () -> String

    def jwt_id=: (String) -> String

    def jwt_id?: () -> bool

    def jwt_id_changed?: () -> bool

    def jwt_id_change: () -> [ String?, String? ]

    def jwt_id_will_change!: () -> void

    def jwt_id_was: () -> String?

    def jwt_id_previously_changed?: () -> bool

    def jwt_id_previous_change: () -> Array[String?]?

    def jwt_id_previously_was: () -> String?

    def jwt_id_before_last_save: () -> String?

    def jwt_id_change_to_be_saved: () -> Array[String?]?

    def jwt_id_in_database: () -> String?

    def saved_change_to_jwt_id: () -> Array[String?]?

    def saved_change_to_jwt_id?: () -> bool

    def will_save_change_to_jwt_id?: () -> bool

    def restore_jwt_id!: () -> void

    def clear_jwt_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def last_access_at: () -> ActiveSupport::TimeWithZone?

    def last_access_at=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def last_access_at?: () -> bool

    def last_access_at_changed?: () -> bool

    def last_access_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def last_access_at_will_change!: () -> void

    def last_access_at_was: () -> ActiveSupport::TimeWithZone?

    def last_access_at_previously_changed?: () -> bool

    def last_access_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_access_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def last_access_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def last_access_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def last_access_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_last_access_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_last_access_at?: () -> bool

    def will_save_change_to_last_access_at?: () -> bool

    def restore_last_access_at!: () -> void

    def clear_last_access_at_change: () -> void

    def expires_at: () -> ActiveSupport::TimeWithZone

    def expires_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def expires_at?: () -> bool

    def expires_at_changed?: () -> bool

    def expires_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def expires_at_will_change!: () -> void

    def expires_at_was: () -> ActiveSupport::TimeWithZone?

    def expires_at_previously_changed?: () -> bool

    def expires_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def expires_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def expires_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def expires_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def expires_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_expires_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_expires_at?: () -> bool

    def will_save_change_to_expires_at?: () -> bool

    def restore_expires_at!: () -> void

    def clear_expires_at_change: () -> void

    def uuid: () -> String

    def uuid=: (String) -> String

    def uuid?: () -> bool

    def uuid_changed?: () -> bool

    def uuid_change: () -> [ String?, String? ]

    def uuid_will_change!: () -> void

    def uuid_was: () -> String?

    def uuid_previously_changed?: () -> bool

    def uuid_previous_change: () -> Array[String?]?

    def uuid_previously_was: () -> String?

    def uuid_before_last_save: () -> String?

    def uuid_change_to_be_saved: () -> Array[String?]?

    def uuid_in_database: () -> String?

    def saved_change_to_uuid: () -> Array[String?]?

    def saved_change_to_uuid?: () -> bool

    def will_save_change_to_uuid?: () -> bool

    def restore_uuid!: () -> void

    def clear_uuid_change: () -> void
  end
  include GeneratedAttributeMethods

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Session, Integer]
    include Enumerable[Session]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Session, Integer]
  end
end
